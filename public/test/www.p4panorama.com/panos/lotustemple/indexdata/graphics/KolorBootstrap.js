var krpano=null;var debug=false;var krpanoLoaded=false;var pluginLoaded=new ktools.Map();var isTourStarted=false;var kolorFullscreen=null;var kolorBrowserDetect=null;var kolorStartIndex=4000;var crossDomainTargetUrl='';var tourLanguage;if(debug){if(typeof(console)=='undefined'){console={log:function(text){}};}}
jQuery(document).ready(function(){kolorBrowserDetect=new ktools.BrowserDetect();kolorBrowserDetect.init();kolorFullscreen=new ktools.Fullscreen(document.getElementById("tourDIV"));kolorFullscreen.supportsFullscreen();kolorFullscreen.setExternal({'enter':krPanoFullscreenEnter,'exit':krPanoFullscreenExit,'change':krpanoFullscreenChange,'resize':krPanoFullscreenResize});});function krPanoFullscreenEnter(){var ki=getKrPanoInstance();if(ki!==null){getKrPanoInstance().call("enterFullScreenFallback");}}
function krPanoFullscreenExit(){var ki=getKrPanoInstance();if(ki!==null){ki.call("exitFullScreenFallback");}}
function krpanoFullscreenChange(state){var ki=getKrPanoInstance();if(ki!==null){if(state){getKrPanoInstance().call("enterFullScreenChangeEvent");}else{getKrPanoInstance().call("exitFullScreenChangeEvent");}}}
function krPanoFullscreenResize(){var ki=getKrPanoInstance();if(ki!==null){getKrPanoInstance().call("resizeFullScreenEvent");}}
function setFullscreen(value){var state;if(typeof value=="string")
state=(value.toLowerCase()=="true");else
state=Boolean(value);if(kolorFullscreen){if(state){kolorFullscreen.request();}else{kolorFullscreen.exit();}}}
function getKrPanoInstance(){if(krpano==null){krpano=document.getElementById('krpanoSWFObject');}
return krpano;}
function invokeKrFunction(fnName){var args=[].slice.call(arguments,1);var callString=fnName+'(';for(var i=0,ii=args.length;i<ii;i++)
{callString+=args[i];if(i!=ii-1){callString+=', ';}}
callString+=');';if(getKrPanoInstance()!==null)
{getKrPanoInstance().call(callString);}}
function getKrValue(identifier,type){if(typeof identifier=="undefined"){return identifier;}
if(getKrPanoInstance()!==null)
{if(getKrPanoInstance().get(identifier)==null){return null;}
switch(type){case "int":return parseInt(getKrPanoInstance().get(identifier));case "float":return parseFloat(getKrPanoInstance().get(identifier));case "string":return String(getKrPanoInstance().get(identifier));case "bool":return Boolean(getKrPanoInstance().get(identifier)==='true'||parseInt(getKrPanoInstance().get(identifier))===1||getKrPanoInstance().get(identifier)==='yes'||getKrPanoInstance().get(identifier)==='on');default:return getKrPanoInstance().get(identifier);}}
else
{return null;}}
function invokePluginFunction(pluginName,functionName){if(debug){console.log("invokePluginFunction("+pluginName+", "+functionName+")");}
var plugin=ktools.KolorPluginList.getInstance().getPlugin(pluginName);if(plugin==null){if(debug){console.log("invokePluginFunction: plugin instance doesn't exist");}
if(pluginLoaded&&pluginLoaded.item(pluginName)){pluginLoaded.update(pluginName,arguments);}else{pluginLoaded.add(pluginName,arguments);}
return false;}
var engine=plugin.getRegistered();if(engine==null){if(debug){console.log("invokePluginFunction: plugin isn't registered");}
if(pluginLoaded&&pluginLoaded.item(pluginName)){pluginLoaded.update(pluginName,arguments);}else{pluginLoaded.add(pluginName,arguments);}
return false;}
var restArgs=[].slice.call(arguments,2);return engine[functionName](restArgs);}
function eventKrpanoLoaded(isWebVr){if(debug){console.log('krpano is loaded');}
if(krpanoLoaded){return false;}
tourLanguage=getKrValue("tour_language","string")
if(typeof tourLanguage=="undefined"){tourLanguage='en';}
ktools.I18N.getInstance().initLanguage(tourLanguage,crossDomainTargetUrl+'indexdata/index_messages_','.xml');krpanoLoaded=true;if(isWebVr){addKolorAnalytics('analytics');}else{addKolorSocial('socialButton1','twitter');addKolorSocial('socialButton','facebook');addKolorAnalytics('analytics');addKolorBox('websiteViewer1');addKolorBox('websiteViewer');addKolorArea('description');addKolorBox('webVideoViewer');addKolorBox('socialShare');addKolorArea('panotourmapsArea');}}
function eventUnloadPlugins(){resetValuesForPlugins();deleteKolorMap('panotourmaps');deleteKolorArea('panotourmapsArea');deleteKolorBox('socialShare');deleteKolorBox('webVideoViewer');deleteKolorArea('description');deleteKolorBox('websiteViewer');deleteKolorBox('websiteViewer1');deleteKolorAnalytics('analytics');deleteKolorSocial('socialButton');deleteKolorSocial('socialButton1');}
function resetValuesForPlugins(){krpano=null;krpanoLoaded=false;isTourStarted=false;pluginLoaded=new ktools.Map();kolorStartIndex=4000;}
function eventTourStarted(){if(debug){console.log('tour is started');}
isTourStarted=true;}
function eventTourChangeLanguage(pLang){if(debug){console.log('change tour language : '+pLang);}
ktools.I18N.getInstance().initLanguage(pLang,crossDomainTargetUrl+'indexdata/index_messages_','.xml');}
var KolorMapApiProviders=new Object();KolorMapApiProviders.Type={googlev3:"googlev3",openlayersv2:"openlayersv2",microsoftv7:"microsoftv7",yandexv2:"yandexv2"};KolorMapApiProviders.Url={googlev3:"//maps.googleapis.com/maps/api/js?callback=handleApiReady",openlayersv2:"//cdnjs.cloudflare.com/ajax/libs/openlayers/2.12/OpenLayers.js",microsoftv7:"//www.bing.com/api/maps/mapcontrol/?callback=handleApiReady",yandexv2:"//api-maps.yandex.ru/2.0-stable/?load=package.full&lang=ru-RU&onload=handleApiReady"};KolorMapApiProviders.Key={googlev3:"&key=",openlayersv2:"",microsoftv7:"",yandexv2:"&key="};KolorMapApiProviders.Script={googlev3:"mxn.googlev3.core.js",openlayersv2:"mxn.openlayersv2.core.js",microsoftv7:"mxn.microsoftv7.core.js",yandexv2:"mxn.yandexv2.core.js"};var mapLoaded=new ktools.Map();var mapLoadedCounter=new ktools.Map();var mapPluginApiReadyCheck=new Array();var mapMarkerDefault=new ktools.Map();var mapInstance=new ktools.Map();var mapInitCounter=new ktools.Map();var refreshIE="";if(navigator.appName=="Microsoft Internet Explorer"){var timestamp=new Date().getTime();refreshIE="?v="+timestamp;}
var microsoftv7_key="";function handleApiReady(){var pluginName=mapPluginApiReadyCheck[0];if(debug){console.log('Proprietary map API is loaded for '+pluginName);}
if(pluginName!=null){var counter=mapLoadedCounter.item(pluginName)-1;mapLoadedCounter.update(pluginName,counter);if(counter<=0){mapLoaded.update(pluginName,true);}
mapPluginApiReadyCheck.shift();}}
function addKolorMap(pluginName,mapsApiArray,mapAreaDiv){var mapsApiLength=mapsApiArray.length;if(mapsApiLength>0){var mapApiOrder=new Array();var useGoogleLabelsClass=false;var hasOpenlayersMap=false;for(var i=0;i<mapsApiLength;i++){mapPluginApiReadyCheck.push(pluginName);switch(mapsApiArray[i][0]){case "microsoft":case "microsoft7":case "microsoftv7":case "microsoftv8":microsoftv7_key=mapsApiArray[i][1];mapApiOrder[i]=[KolorMapApiProviders.Type.microsoftv7,KolorMapApiProviders.Url.microsoftv7,KolorMapApiProviders.Key.microsoftv7,KolorMapApiProviders.Script.microsoftv7];break;case "google":case "googlev3":KolorMapApiProviders.Key.googlev3+=mapsApiArray[i][1];mapApiOrder[i]=[KolorMapApiProviders.Type.googlev3,KolorMapApiProviders.Url.googlev3,KolorMapApiProviders.Key.googlev3,KolorMapApiProviders.Script.googlev3];useGoogleLabelsClass=true;break;case "yandex":case "yandexv2":KolorMapApiProviders.Key.yandexv2+=mapsApiArray[i][1];mapApiOrder[i]=[KolorMapApiProviders.Type.yandexv2,KolorMapApiProviders.Url.yandexv2,KolorMapApiProviders.Key.yandexv2,KolorMapApiProviders.Script.yandexv2];break;case "openlayers":case "openlayersv2":hasOpenlayersMap=true;mapApiOrder[i]=[KolorMapApiProviders.Type.openlayersv2,KolorMapApiProviders.Url.openlayersv2,KolorMapApiProviders.Key.openlayersv2,KolorMapApiProviders.Script.openlayersv2];break;}}
mapLoaded.add(pluginName,false);mapMarkerDefault.add(pluginName,{done:false});mapInstance.add(pluginName,false);mapLoadedCounter.add(pluginName,mapsApiLength);mapInitCounter.add(pluginName,300);var mapPlugin=new ktools.KolorPlugin(pluginName);var mapApiScript=new ktools.Script(mapApiOrder[0][0],mapApiOrder[0][1]+mapApiOrder[0][2],[],false);if(mapsApiLength>1&&mapApiOrder[1]){var mapApiScript2=new ktools.Script(mapApiOrder[1][0],mapApiOrder[1][1]+mapApiOrder[1][2],[mapApiScript],false);if(mapsApiLength>2&&mapApiOrder[2]){var mapApiScript3=new ktools.Script(mapApiOrder[2][0],mapApiOrder[2][1]+mapApiOrder[2][2],[mapApiScript2],false);var mapstractionScript=new ktools.Script("maps_mapstraction",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.js"+refreshIE,[mapApiScript3],false);var mapstractionScriptBase=new ktools.Script("maps_mapstraction_base",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.basemap.js",[mapstractionScript],false);var mapstractionScriptCore=new ktools.Script("maps_mapstraction_core",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.core.js"+refreshIE,[mapstractionScriptBase],false);var mapstractionScriptCoreLayer3=new ktools.Script("maps_mapstraction_core_layer3",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/"+mapApiOrder[2][3]+refreshIE,[mapstractionScriptCore],false);var mapstractionScriptCoreLayer2=new ktools.Script("maps_mapstraction_core_layer2",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/"+mapApiOrder[1][3]+refreshIE,[mapstractionScriptCoreLayer3],false);var mapstractionScriptCoreLayer1=new ktools.Script("maps_mapstraction_core_layer1",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/"+mapApiOrder[0][3]+refreshIE,[mapstractionScriptCoreLayer2],false);}else{if(mapsApiLength>2){var tmp_counter=mapLoadedCounter.item(pluginName)-1;mapLoadedCounter.update(pluginName,tmp_counter);}
var mapstractionScript=new ktools.Script("maps_mapstraction",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.js"+refreshIE,[mapApiScript2],false);var mapstractionScriptBase=new ktools.Script("maps_mapstraction_base",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.basemap.js",[mapstractionScript],false);var mapstractionScriptCore=new ktools.Script("maps_mapstraction_core",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.core.js"+refreshIE,[mapstractionScriptBase],false);var mapstractionScriptCoreLayer2=new ktools.Script("maps_mapstraction_core_layer2",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/"+mapApiOrder[1][3]+refreshIE,[mapstractionScriptCore],false);var mapstractionScriptCoreLayer1=new ktools.Script("maps_mapstraction_core_layer1",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/"+mapApiOrder[0][3]+refreshIE,[mapstractionScriptCoreLayer2],false);}}else{if(mapsApiLength>1){var tmp_counter=mapLoadedCounter.item(pluginName)-1;mapLoadedCounter.update(pluginName,tmp_counter);}
var mapstractionScript=new ktools.Script("maps_mapstraction",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.js"+refreshIE,[mapApiScript],false);var mapstractionScriptBase=new ktools.Script("maps_mapstraction_base",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.basemap.js",[mapstractionScript],false);var mapstractionScriptCore=new ktools.Script("maps_mapstraction_core",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.core.js"+refreshIE,[mapstractionScriptBase],false);var mapstractionScriptCoreLayer1=new ktools.Script("maps_mapstraction_core_layer1",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/"+mapApiOrder[0][3]+refreshIE,[mapstractionScriptCore],false);}
var kolorMapScript=null;if(useGoogleLabelsClass){var googleLabelsScript=new ktools.Script("maps_google_labels",crossDomainTargetUrl+"indexdata/graphics/KolorMap/lib/mxn.googlev3.core.labels.js",[mapstractionScriptCoreLayer1],false);kolorMapScript=new ktools.Script("kolormap",crossDomainTargetUrl+"indexdata/graphics/KolorMap/js/KolorMap.min.js",[googleLabelsScript],true);}else{kolorMapScript=new ktools.Script("kolormap",crossDomainTargetUrl+"indexdata/graphics/KolorMap/js/KolorMap.min.js",[mapstractionScriptCoreLayer1],true);}
mapPlugin.addScript(kolorMapScript);var kolorMapCSS=new ktools.CssStyle("kolormapCSS",crossDomainTargetUrl+"indexdata/graphics/KolorMap/js/kolorMap.css");mapPlugin.addCss(kolorMapCSS);ktools.KolorPluginList.getInstance().addPlugin(mapPlugin.getPluginName(),mapPlugin,true);if(hasOpenlayersMap){setTimeout(function(){handleApiReady();},1000);}
initKolorMapOnReady(pluginName,mapApiScript.getName(),mapAreaDiv);}}
function initKolorMapOnReady(pluginName,defaultMapLayer,mapAreaDiv){var err="";var reload=false;if(!krpanoLoaded){err="throw: krpano is not loaded";reload=true;}
if(!isTourStarted){err="throw: tour is not started";reload=true;}
if(!mapLoaded.item(pluginName)){err="throw: plugin Map is not loaded";reload=true;}
if(typeof KolorMap=="undefined"||!ktools.KolorPluginList.getInstance().getPlugin(pluginName).isInitialized()){err="throw: KolorMap library not ready";reload=true;}
if(mapInstance.item(pluginName)&&ktools.KolorPluginList.getInstance().getPlugin(pluginName).getRegistered()){err="throw: KolorMap already loaded";reload=true;}else{mapInstance.update(pluginName,true);}
if(getKrValue('ptplugin['+pluginName+'].engine','string')==null){err="throw: KolorMap can't reach XML yet";reload=true;}
if(reload){if(debug){console.log(err);}
if(mapInitCounter.item(pluginName)>0){if(isTourStarted){mapInitCounter.update(pluginName,(mapInitCounter.item(pluginName)-1));}
setTimeout(function(){initKolorMapOnReady(pluginName,defaultMapLayer,mapAreaDiv);},100);return;}else{alert("Connection timeout while making map API call. Try to reload the page.");return;}}
var selectorArray=new Array();if(getKrValue('ptplugin['+pluginName+'].multimap','bool')){var defaultMap=new Object();defaultMap['element']=getKrValue('ptplugin['+pluginName+'].multiplemaps.map.element','string');defaultMap['provider']=getKrValue('ptplugin['+pluginName+'].multiplemaps.map.provider','string');defaultMap['name']=ktools.I18N.getInstance().getMessage(getKrValue('ptplugin['+pluginName+'].multiplemaps.map.name','string'));selectorArray[0]=defaultMap;kolorMap=new KolorMap(defaultMap.element,defaultMap.provider);}else{if(mapAreaDiv){kolorMap=new KolorMap(mapAreaDiv,defaultMapLayer);}else{kolorMap=new KolorMap('mapDIV',defaultMapLayer);}}
if(debug){console.log("instance: "+kolorMap);}
if(mapAreaDiv){kolorMap.setMapLayer(mapAreaDiv);}else{kolorMap.setMapLayer('mapDIV');kolorMap.setMapContainer('mapcontainer');kolorMap.setPanoContainer('panoDIV');kolorMap.setTourContainer('tourDIV');}
kolorMap.setMapPosition(getKrValue('ptplugin['+pluginName+'].position','string'));kolorMap.setMapZorder(kolorStartIndex+getKrValue("ptplugin["+pluginName+"].zorder","int"));kolorMap.setGraphicsUrl(crossDomainTargetUrl+"indexdata/graphics/"+pluginName.toLowerCase()+"/");kolorMap.setMapResizable(getKrValue('ptplugin['+pluginName+'].resizable','bool'));kolorMap.setBgColor(getKrValue('ptplugin['+pluginName+'].bgcolor','string'));kolorMap.setDeviceUsed(getKrValue('vrtourdevice','string'));var displayOnStart=getKrValue('ptplugin['+pluginName+'].openatstart','bool');if(mapAreaDiv){kolorMap.initMapLayer();}else{kolorMap.setMapSize(getKrValue('ptplugin['+pluginName+'].size','int'));if(displayOnStart){kolorMap.initMapSize();kolorMap.initMapLayer();}}
if(getKrValue('ptplugin['+pluginName+'].multimap','bool')){var secondMap=new Object();secondMap['element']=getKrValue('ptplugin['+pluginName+'].multiplemaps.map[1].element','string');secondMap['provider']=getKrValue('ptplugin['+pluginName+'].multiplemaps.map[1].provider','string');secondMap['name']=ktools.I18N.getInstance().getMessage(getKrValue('ptplugin['+pluginName+'].multiplemaps.map[1].name','string'));selectorArray[1]=secondMap;jQuery('#mapcontainer').append('<div id="'+secondMap['element']+'"></div>');if(getKrValue('ptplugin['+pluginName+'].multiplemaps.map[2]')){var thirdMap=new Object();thirdMap['element']=getKrValue('ptplugin['+pluginName+'].multiplemaps.map[2].element','string');thirdMap['provider']=getKrValue('ptplugin['+pluginName+'].multiplemaps.map[2].provider','string');thirdMap['name']=ktools.I18N.getInstance().getMessage(getKrValue('ptplugin['+pluginName+'].multiplemaps.map[2].name','string'));selectorArray[2]=thirdMap;jQuery('#mapcontainer').append('<div id="'+thirdMap['element']+'"></div>');}
kolorMap.addSwapSelector(pluginName,selectorArray,ktools.I18N.getInstance().getMessage(getKrValue('ptplugin['+pluginName+'].multiplemaps.label','string')));}
var startPointLat=getKrValue('ptplugin['+pluginName+'].lat','float');var startPointLng=getKrValue('ptplugin['+pluginName+'].lng','float');var startPointZoom=getKrValue('ptplugin['+pluginName+'].zoom','int');var startPoint=new mxn.LatLonPoint(startPointLat,startPointLng);kolorMap.setStartPoint(startPoint,startPointZoom);kolorMap.getMxnMap().setCenterAndZoom(startPoint,startPointZoom);switch(getKrValue('ptplugin['+pluginName+'].maptypelayer','string')){case 'satellite':kolorMap.getMxnMap().setMapType(mxn.Mapstraction.SATELLITE);break;case 'hybrid':kolorMap.getMxnMap().setMapType(mxn.Mapstraction.HYBRID);break;case 'physical':kolorMap.getMxnMap().setMapType(mxn.Mapstraction.PHYSICAL);break;default:kolorMap.getMxnMap().setMapType(mxn.Mapstraction.ROAD);}
var useZoom=getKrValue('ptplugin['+pluginName+'].controls.zoom','bool');var usePan=getKrValue('ptplugin['+pluginName+'].controls.pan','bool');var useMapType=getKrValue('ptplugin['+pluginName+'].controls.maptype','bool');var useOverview=getKrValue('ptplugin['+pluginName+'].controls.overview','bool');var useScale=getKrValue('ptplugin['+pluginName+'].controls.scale','bool');var useSpecific=new Object();if(getKrValue('ptplugin['+pluginName+'].controls.specific')){if(getKrValue('ptplugin['+pluginName+'].controls.specific.streetview','bool')){useSpecific.streetview=getKrValue('ptplugin['+pluginName+'].controls.specific.streetview','bool');}
if(getKrValue('ptplugin['+pluginName+'].controls.specific.view45degree','bool')){useSpecific.view45degree=getKrValue('ptplugin['+pluginName+'].controls.specific.view45degree','bool');}}
kolorMap.addControls(useZoom,usePan,useScale,useMapType,useOverview,useSpecific);var useDragging=false;var useScroll=false;var useDblClick=false;if(getKrValue('ptplugin['+pluginName+'].controls.ui')){useDragging=getKrValue('ptplugin['+pluginName+'].controls.ui.draggable','bool');useScroll=getKrValue('ptplugin['+pluginName+'].controls.ui.scrollable','bool');useDblClick=getKrValue('ptplugin['+pluginName+'].controls.ui.dblclick','bool');}
kolorMap.getMxnMap().setOption('enableDragging',useDragging);kolorMap.getMxnMap().setOption('enableScrollWheelZoom',useScroll);kolorMap.getMxnMap().setOption('disableDoubleClickZoom',!useDblClick);var useRadars=false;var radarOptions={};if(getKrValue('ptplugin['+pluginName+'].radar.visible','string')=="true"){useRadars=true;radarOptions={radius:getKrValue('ptplugin['+pluginName+'].radar.radius','int'),linkToZoom:getKrValue('ptplugin['+pluginName+'].radar.linktozoom','bool'),quality:getKrValue('ptplugin['+pluginName+'].radar.quality','int'),color:getKrValue('ptplugin['+pluginName+'].radar.linecolor','string'),opacity:getKrValue('ptplugin['+pluginName+'].radar.lineopacity','float'),width:getKrValue('ptplugin['+pluginName+'].radar.linewidth','int'),fillColor:getKrValue('ptplugin['+pluginName+'].radar.fillcolor','string'),fillOpacity:getKrValue('ptplugin['+pluginName+'].radar.fillopacity','float'),enginePreset:0};}
var useAnimation=false;if(getKrValue('ptplugin['+pluginName+'].markers.animation','string')=="bounce"){useAnimation=true;}
var markersLength=parseInt(getKrPanoInstance().get('ptplugin['+pluginName+'].marker.count'));if(markersLength>0){for(var i=0;i<markersLength;i++){var markerId=getKrValue('ptplugin['+pluginName+'].marker['+i+'].name','string');var markerPointLat=getKrValue('ptplugin['+pluginName+'].marker['+i+'].lat','float');var markerPointLng=getKrValue('ptplugin['+pluginName+'].marker['+i+'].lng','float');var markerLatLon=new mxn.LatLonPoint(markerPointLat,markerPointLng);var isDraggable=getKrValue('ptplugin['+pluginName+'].marker['+i+'].draggable','bool');var infoOnHover=getKrValue('ptplugin['+pluginName+'].marker['+i+'].onhover','bool');var isAnimated=getKrValue('ptplugin['+pluginName+'].marker['+i+'].animated','bool');var iconUrl="";var iconSize=null;var iconAnchor=null;var markerIcon=getKrValue('ptplugin['+pluginName+'].marker['+i+'].markericon','object');if(markerIcon!=null){iconUrl=markerIcon.url;iconSize=new Array();iconSize[0]=parseInt(markerIcon.iconwidth);iconSize[1]=parseInt(markerIcon.iconheight);iconAnchor=new Array();switch(markerIcon.iconanchor.toLowerCase()){case "topleft":iconAnchor[0]=0;iconAnchor[1]=0;iconAnchor[2]="topleft";break;case "top":iconAnchor[0]=parseInt(iconSize[0]/2);iconAnchor[1]=0;iconAnchor[2]="top";break;case "topright":iconAnchor[0]=iconSize[0];iconAnchor[1]=0;iconAnchor[2]="topright";break;case "left":iconAnchor[0]=0;iconAnchor[1]=parseInt(iconSize[1]/2);iconAnchor[2]="left";break;case "center":iconAnchor[0]=parseInt(iconSize[1]/2);iconAnchor[1]=parseInt(iconSize[1]/2);iconAnchor[2]="center";break;case "right":iconAnchor[0]=iconSize[0];iconAnchor[1]=parseInt(iconSize[1]/2);iconAnchor[2]="right";break;case "bottomleft":iconAnchor[0]=0;iconAnchor[1]=iconSize[1];iconAnchor[2]="bottomleft";break;case "bottomright":iconAnchor[0]=iconSize[0];iconAnchor[1]=iconSize[1];iconAnchor[2]="bottomright";break;default:iconAnchor[0]=parseInt(iconSize[0]/2);iconAnchor[1]=iconSize[1];iconAnchor[2]="bottom";}}
if(useRadars&&getKrValue('ptplugin['+pluginName+'].marker['+i+'].isscene','bool')&&getKrValue('ptplugin['+pluginName+'].marker['+i+'].hasradar','bool')){var markerPointHeading=getKrValue('ptplugin['+pluginName+'].marker['+i+'].heading','float');radarOptions.heading=markerPointHeading;var aMarkerRadar=kolorMap.addRadar(markerId,markerLatLon,radarOptions);}
kolorMap.activateMarkersAnimation(useAnimation);var aMarker=kolorMap.addMarker(markerId,pluginName,markerLatLon,iconUrl,iconSize,iconAnchor,jQuery.trim(ktools.I18N.getInstance().getMessage(getKrValue('ptplugin['+pluginName+'].marker['+i+'].desc','string'))),getKrValue('ptplugin['+pluginName+'].marker['+i+'].desctype','string'),infoOnHover,isDraggable,isAnimated);kolorMap.getMxnMap().addEventListener('click',mapMarkerEvent,aMarker);}}
ktools.KolorPluginList.getInstance().getPlugin(pluginName).register(kolorMap);var kolorMapRegistred=ktools.KolorPluginList.getInstance().getPlugin(pluginName).getRegistered();if(kolorMapRegistred){if(mapMarkerDefault.item(pluginName).done==false){var applySelection=true;if(getKrValue('ptplugin['+pluginName+'].markerSelected.name','string')!=""){setMapDefaultMarker(pluginName,getKrValue('ptplugin['+pluginName+'].markerSelected.name','string'),getKrValue('ptplugin['+pluginName+'].markerSelected.heading','float'),getKrValue('ptplugin['+pluginName+'].markerSelected.fov','float'));}else if(mapMarkerDefault.item(pluginName).id!=undefined){mapMarkerDefaultArray=[mapMarkerDefault.item(pluginName).id,mapMarkerDefault.item(pluginName).heading,mapMarkerDefault.item(pluginName).fov];}else{applySelection=false;}
if(applySelection){if(debug){console.log("activate the stored marker after init");}
var mapMarkerDefaultArray=[mapMarkerDefault.item(pluginName).id,mapMarkerDefault.item(pluginName).heading,mapMarkerDefault.item(pluginName).fov,getKrValue('ptplugin['+pluginName+'].centeronspots','bool')];kolorMapRegistred.changeCurrentMarker(mapMarkerDefaultArray);}
mapMarkerDefault.update(pluginName,{done:true});}}else{if(debug){console.log("KolorMap isn't really loaded");}
mapInstance.update(pluginName,false);setTimeout(function(){initKolorMapOnReady(pluginName,defaultMapLayer,mapAreaDiv);},100);return;}
if(mapAreaDiv){kolorMapRegistred.forceResizeMapLayer([mapAreaDiv]);}else{if(displayOnStart){kolorMapRegistred.initResizableMap();}else{if(kolorMapRegistred){kolorMapRegistred.openCloseMap(["close"]);}}}
invokeKrFunction("kolorMapJsReady_"+pluginName);if(pluginLoaded&&pluginLoaded.item(pluginName)){invokePluginFunction.apply(null,pluginLoaded.item(pluginName).funcArgs);pluginLoaded.remove(pluginName);}}
function setMapDefaultMarker(pluginName,markerId,krHeading,krFov){var mapMarkerDefaultObject={id:markerId,heading:krHeading,fov:krFov,done:false};mapMarkerDefault.update(pluginName,mapMarkerDefaultObject);}
function mapMarkerEvent(eventType,objectSource,objdata){if(debug){console.log('Map marker event "'+eventType+'" for marker "'+objectSource.getAttribute("id")+'" on plugin "'+objectSource.getAttribute("plugName")+'"');}
if(kolorMap.getActiveMarker()!=objectSource){var jsMapMarkerAction=objectSource.getAttribute("plugName")+"GoMarker('"+objectSource.getAttribute("id")+"')";getKrPanoInstance().call(jsMapMarkerAction);}
var krMapMarkerAction=getKrValue('ptplugin['+objectSource.getAttribute("plugName")+'].marker['+objectSource.getAttribute("id")+'].jsclick');getKrPanoInstance().call(krMapMarkerAction);}
function swapProvider(pluginName,element,api){if(ktools.KolorPluginList.getInstance().getPlugin(pluginName).getRegistered()!=null){var kolorMapRegistered=ktools.KolorPluginList.getInstance().getPlugin(pluginName).getRegistered();kolorMapRegistered.swapProvider([element,api]);}}
function deleteKolorMap(pPlugID)
{if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID)){ktools.KolorPluginList.getInstance().removePlugin(pPlugID);}}
var kolorMapContainerDOM;function deleteKolorMapDOM(pPlugID)
{if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID)){var kolorMapRegistered=ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered();if(kolorMapRegistered)
{kolorMapRegistered.deleteResizableMap();kolorMapRegistered.restoreMapContainerDOM(kolorMapContainerDOM);kolorMapRegistered.restorePanoContainerDOM();}
deleteKolorMap('panotourmaps');}}
function saveKolorMapContainer()
{kolorMapContainerDOM=jQuery('#mapcontainer').clone();}
function addKolorArea(pPlugID)
{if(typeof ktools.KolorPluginList.getInstance().getPlugin(pPlugID)=="undefined")
{var kolorAreaCSS=new ktools.CssStyle("KolorAreaCSS",crossDomainTargetUrl+"indexdata/graphics/KolorArea/kolorArea.css");var kolorAreaJS=new ktools.Script("KolorAreaJS",crossDomainTargetUrl+"indexdata/graphics/KolorArea/KolorArea.min.js",[],true);var kolorAreaPlugin=new ktools.KolorPlugin(pPlugID);kolorAreaPlugin.addScript(kolorAreaJS);kolorAreaPlugin.addCss(kolorAreaCSS);ktools.KolorPluginList.getInstance().addPlugin(kolorAreaPlugin.getPluginName(),kolorAreaPlugin,true);}}
function showKolorArea(pPlugID,pContent)
{if(debug){console.log("showKolorArea "+pPlugID);}
if(!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).isInitialized()||typeof KolorArea=="undefined")
{err="KolorArea JS is not loaded !";if(debug){console.log(err);}
setTimeout(function(){showKolorArea(pPlugID,pContent);},100);return;}
if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered()==null)
{ktools.KolorPluginList.getInstance().getPlugin(pPlugID).register(new KolorArea(pPlugID,"panoDIV"));}
var kolorArea=ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered();if(!kolorArea.isReady())
{var kolorAreaOptions=[];var optionName='';var optionValue='';var optionLength=parseInt(getKrPanoInstance().get("ptplugin["+pPlugID+"].settings.option.count"));for(var j=0;j<optionLength;j++)
{optionName=getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].name","string");if(optionName=='zorder'){optionValue=kolorStartIndex+getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].value",getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].type","string"));}else{optionValue=getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].value",getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].type","string"));}
kolorAreaOptions[optionName]=optionValue;}
kolorAreaOptions['device']=getKrValue('vrtourdevice','string');kolorArea.setKolorAreaOptions(kolorAreaOptions);kolorArea.setReady(true);invokeKrFunction("kolorAreaJsReady_"+pPlugID);}
kolorArea.setKolorAreaContent(pContent);kolorArea.openKolorArea();if(pluginLoaded&&pluginLoaded.item(pPlugID)){invokePluginFunction.apply(null,pluginLoaded.item(pPlugID).funcArgs);pluginLoaded.remove(pPlugID);}}
function deleteKolorArea(pPlugID)
{if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID)){ktools.KolorPluginList.getInstance().removePlugin(pPlugID);}
var parent=document.getElementById("panoDIV");var child=document.getElementById(pPlugID);if(parent&&child){parent.removeChild(child);}}
function addKolorBox(pPlugID)
{if(typeof ktools.KolorPluginList.getInstance().getPlugin(pPlugID)=="undefined")
{var kolorBoxCSS=new ktools.CssStyle("KolorBoxCSS",crossDomainTargetUrl+"indexdata/graphics/KolorBox/kolorBox.css");var kolorBoxJS=new ktools.Script("KolorBoxJS",crossDomainTargetUrl+"indexdata/graphics/KolorBox/KolorBox.min.js",[],true);var kolorBoxPlugin=new ktools.KolorPlugin(pPlugID);kolorBoxPlugin.addScript(kolorBoxJS);kolorBoxPlugin.addCss(kolorBoxCSS);ktools.KolorPluginList.getInstance().addPlugin(kolorBoxPlugin.getPluginName(),kolorBoxPlugin,true);showKolorBox(pPlugID,0,true);}}
function showKolorBox(pPlugID,pIndex,pInitOnly)
{if(debug){console.log("showKolorBox "+pPlugID);}
if(!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).isInitialized()||typeof KolorBox==="undefined")
{err="KolorBox JS or XML is not loaded !";if(debug){console.log(err);}
setTimeout(function(){showKolorBox(pPlugID,pIndex,pInitOnly);},100);return;}
if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered()===null)
{ktools.KolorPluginList.getInstance().getPlugin(pPlugID).register(new KolorBox(pPlugID,"panoDIV"));}
var kolorBox=ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered();if(!kolorBox.isReady())
{var kolorBoxOptions=[];var optionName='';var optionValue='';var optionLength=parseInt(getKrPanoInstance().get("ptplugin["+pPlugID+"].settings.option.count"));for(var j=0;j<optionLength;j++)
{optionName=getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].name","string");if(optionName=='zorder'){optionValue=kolorStartIndex+getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].value",getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].type","string"));}else{optionValue=getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].value",getKrValue("ptplugin["+pPlugID+"].settings.option["+j+"].type","string"));}
kolorBoxOptions[optionName]=optionValue;}
kolorBoxOptions['device']=getKrValue('vrtourdevice','string');kolorBox.setKolorBoxOptions(kolorBoxOptions);if(kolorBoxOptions['starts_opened']){pInitOnly=false;}
var kbItem=null;var itemLength=parseInt(getKrPanoInstance().get("ptplugin["+pPlugID+"].internaldata.item.count"));for(var k=0;k<itemLength;k++)
{kbItem=new KolorBoxObject();kbItem.setName(getKrValue("ptplugin["+pPlugID+"].internaldata.item["+k+"].name","string"));kbItem.setTitle(getKrValue("ptplugin["+pPlugID+"].internaldata.item["+k+"].title","string"));kbItem.setCaption(getKrValue("ptplugin["+pPlugID+"].internaldata.item["+k+"].caption","string"));kbItem.setValue(getKrValue("ptplugin["+pPlugID+"].internaldata.item["+k+"].value","string"));if(kbItem.getValue()==="externalData")
kbItem.setData(getKrValue('data['+getKrValue("ptplugin["+pPlugID+"].internaldata.item["+k+"].dataName","string")+'].content','string'));kolorBox.addKolorBoxItem(kbItem);kbItem.init();}
kolorBox.setReady(true);invokeKrFunction("kolorBoxJsReady_"+pPlugID);}
if(typeof pPlugID!=="undefined"&&(typeof pInitOnly==="undefined"||pInitOnly===false))
{if(typeof pIndex==="undefined"){pIndex=0;}
kolorBox.openKolorBox(pIndex);}
if(pluginLoaded&&pluginLoaded.item(pPlugID)){invokePluginFunction.apply(null,pluginLoaded.item(pPlugID));pluginLoaded.remove(pPlugID);}}
function deleteKolorBox(pPlugID)
{if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID)){ktools.KolorPluginList.getInstance().removePlugin(pPlugID);}
var parent=document.getElementById("panoDIV");var child=document.getElementById(pPlugID);if(parent&&child){parent.removeChild(child);}}
function addKolorAnalytics(pPlugID)
{if(typeof ktools.KolorPluginList.getInstance().getPlugin(pPlugID)=="undefined")
{var kolorAnalyticsJS=new ktools.Script("KolorAnalyticsJS",crossDomainTargetUrl+"indexdata/graphics/KolorAnalytics/KolorAnalytics.min.js",[],true);var kolorAnalyticsPlugin=new ktools.KolorPlugin(pPlugID);kolorAnalyticsPlugin.addScript(kolorAnalyticsJS);ktools.KolorPluginList.getInstance().addPlugin(kolorAnalyticsPlugin.getPluginName(),kolorAnalyticsPlugin,true);if(!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered()||!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).isInitialized()||typeof KolorAnalytics=="undefined"){createKolorAnalytics(pPlugID);}}}
function createKolorAnalytics(pPlugID)
{if(debug){console.log("createKolorAnalytics "+pPlugID);}
if(!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).isInitialized()||typeof KolorAnalytics=="undefined")
{err="KolorAnalytics JS or XML is not loaded !";if(debug){console.log(err);}
setTimeout(function(){createKolorAnalytics(pPlugID);},100);return;}
if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered()==null)
{ktools.KolorPluginList.getInstance().getPlugin(pPlugID).register(new KolorAnalytics(pPlugID,"panoDIV"));}
var kolorAnalytics=ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered();if(!kolorAnalytics.isReady())
{var kolorAnalyticsOptions=[];var optionLength=parseInt(getKrPanoInstance().get("ptplugin["+pPlugID+"].settings.option.count"));for(var i=0;i<optionLength;i++)
{kolorAnalyticsOptions[getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].name","string")]=getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].value",getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].type","string"));}
kolorAnalytics.setKolorAnalyticsOptions(kolorAnalyticsOptions);kolorAnalytics.setReady(true);invokeKrFunction("kolorAnalyticsJsReady_"+pPlugID);kolorAnalytics.generateKolorAnalytics();}}
function updateKolorAnalytics(pPlugID,pLang)
{if(debug){console.log("updateKolorAnalytics "+pPlugID);}}
function deleteKolorAnalytics(pPlugID)
{if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID)){ktools.KolorPluginList.getInstance().removePlugin(pPlugID);}}
function addKolorSocial(pPlugID,vendorID)
{if(typeof ktools.KolorPluginList.getInstance().getPlugin(pPlugID)=="undefined")
{var kolorSocialJS=new ktools.Script("KolorSocialJS",crossDomainTargetUrl+"indexdata/graphics/KolorSocial/KolorSocial.min.js",[],true);var kolorSocialPlugin=new ktools.KolorPlugin(pPlugID);kolorSocialPlugin.addScript(kolorSocialJS);ktools.KolorPluginList.getInstance().addPlugin(kolorSocialPlugin.getPluginName(),kolorSocialPlugin,true);if(vendorID==="lineit"&&jQuery('script[src="//scdn.line-apps.com/n/line_it/thirdparty/loader.min.js"]').length==0){var scriptEl=document.createElement('script');scriptEl.src='//scdn.line-apps.com/n/line_it/thirdparty/loader.min.js';scriptEl.async=true;scriptEl.defer=true;document.body.appendChild(scriptEl);}}}
function openKolorSocial(pPlugID)
{if(debug){console.log("openKolorSocial "+pPlugID);}
if(!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered()||!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).isInitialized()||typeof KolorSocial=="undefined"){createKolorSocial(pPlugID);}else{ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered().showKolorSocial();}}
function createKolorSocial(pPlugID)
{if(debug){console.log("createKolorSocial "+pPlugID);}
if(!ktools.KolorPluginList.getInstance().getPlugin(pPlugID).isInitialized()||typeof KolorSocial=="undefined")
{err="KolorSocial JS or XML is not loaded !";if(debug){console.log(err);}
setTimeout(function(){createKolorSocial(pPlugID);},100);return;}
if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered()==null)
{ktools.KolorPluginList.getInstance().getPlugin(pPlugID).register(new KolorSocial(pPlugID,"panoDIV"));}
var kolorSocial=ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered();if(!kolorSocial.isReady())
{var kolorSocialOptions=[];var optionLength=parseInt(getKrPanoInstance().get("ptplugin["+pPlugID+"].settings.option.count"));for(var i=0;i<optionLength;i++)
{if(getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].name","string")=='zorder'){kolorSocialOptions[getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].name","string")]=kolorStartIndex+getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].value",getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].type","string"));}else{kolorSocialOptions[getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].name","string")]=getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].value",getKrValue("ptplugin["+pPlugID+"].settings.option["+i+"].type","string"));}}
kolorSocialOptions['device']=getKrValue('vrtourdevice','string');kolorSocial.setKolorSocialOptions(kolorSocialOptions);kolorSocial.setReady(true);invokeKrFunction("kolorSocialJsReady_"+pPlugID);kolorSocial.generateKolorSocial();}}
function updateKolorSocial(pPlugID,pLang)
{if(debug){console.log("updateKolorSocial "+pPlugID);}
if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID).isInitialized()&&typeof KolorSocial!="undefined"&&ktools.KolorPluginList.getInstance().getPlugin(pPlugID).getRegistered()!=null)
{}}
function deleteKolorSocial(pPlugID)
{if(ktools.KolorPluginList.getInstance().getPlugin(pPlugID)){ktools.KolorPluginList.getInstance().removePlugin(pPlugID);}
var parent=document.getElementById("panoDIV");var child=document.getElementById(pPlugID);if(parent&&child){parent.removeChild(child);}}